name: PR Validation

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

# Minimal permissions - only read access needed
permissions:
  contents: read

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR Title and Description
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const prTitle = pullRequest.title;
            const prBody = pullRequest.body || '';
            
            console.log('üîç Validating PR...');
            console.log('PR Title:', prTitle);
            console.log('PR Description length:', prBody.trim().length);

            let isValid = true;
            let errors = [];

            // Validate PR title format: feature/issue-16-loan-product-configuration
            const titleRegex = /^(feature|bugfix|hotfix|chore)\/issue-\d+-[a-z0-9-]+$/;
            if (!titleRegex.test(prTitle)) {
              isValid = false;
              errors.push(`‚ùå Invalid PR title: "${prTitle}"`);
              errors.push('   Required format: <prefix>/issue-<number>-<description>');
              errors.push('   Valid prefixes: feature, bugfix, hotfix, chore');
              errors.push('   Example: feature/issue-16-loan-product-configuration');
            }

            // Validate PR description length (minimum 100 characters)
            if (prBody.trim().length < 100) {
              isValid = false;
              errors.push(`‚ùå PR description too short: ${prBody.trim().length} characters`);
              errors.push('   Minimum required: 100 characters');
            }

            // Output results
            if (isValid) {
              console.log('‚úÖ PR validation passed!');
              console.log('   ‚úì Title format is correct');
              console.log('   ‚úì Description meets minimum length requirement');
            } else {
              console.log('‚ùå PR validation failed:');
              errors.forEach(error => console.log(error));
              core.setFailed('PR does not meet validation requirements');
            }
