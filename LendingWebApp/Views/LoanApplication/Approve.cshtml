@model LoanApplicationService.Service.DTOs.LoanApplicationModule.LoanApplicationDto;

@{
    ViewData["Title"] = "Approve Loan Application";
    var loanProducts = ViewBag.LoanProducts as List<SelectListItem>;
    var customers = ViewBag.Customers as List<SelectListItem>;
    Layout = User.IsInRole("Customer") ? "~/Views/Customer/Shared/_CustomerLayout.cshtml" : "~/Views/Shared/_Layout.cshtml";
}

<h2>Approve Loan Application</h2>
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Approve", "LoanApplication", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.ApplicationId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (!User.IsInRole("Customer"))
            {
                <div class="mb-3">
                    @Html.LabelFor(model => model.CustomerId, "Customer", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CustomerId, new { @class = "form-control", type = "number", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            }
            <div class="mb-3">
                @Html.LabelFor(model => model.ProductId, "Loan Product", new { @class = "form-label" })
                @Html.DropDownListFor(model => model.ProductId, loanProducts, "-- Select Loan Product --", new { @class = "form-select", disabled = "disabled"})
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.TermMonths, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.TermMonths, new { @class = "form-control", type = "number", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.TermMonths, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.RequestedAmount, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.RequestedAmount, new { @class = "form-control", type = "number", step = "0.01", @readonly ="readonly" })
                @Html.ValidationMessageFor(model => model.RequestedAmount, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.Purpose, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Purpose, new { @class = "form-control" , @readonly= "readonly"})
                @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.ApprovedAmount, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.ApprovedAmount, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.ApprovedAmount, "", new { @class = "text-danger" })

            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Approve </button>

            </div>
        }

    </div>
