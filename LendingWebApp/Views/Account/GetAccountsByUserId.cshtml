@using X.PagedList;
@using X.PagedList.Mvc.Core

@model IPagedList<LoanApplicationService.Service.DTOs.Account.AccountDto>;
@using LoanApplicationService.CrossCutting.Utils;

@{
    Layout = "~/Views/Customer/Shared/_CustomerLayout.cshtml";
    ViewData["Title"] = "My Loan Accounts";
}

<h1> Accounts</h1>
@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                
                <th>Account Number</th>
                <th>Account Type</th>
                <th>Principal Amount</th>
                <th>Outstanding Balance</th>
                <th>Disbursed Amount</th>
                <th>Available Balance</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in Model)
            {
                <tr>
                    
                    <td>@account.AccountNumber</td>
                    <td>@account.AccountType</td>
                    <td>@account.PrincipalAmount.ToString("C")</td>
                    <td>@account.OutstandingBalance.ToString("C")</td>
                    <td>@account.DisbursedAmount.ToString("C")</td>
                    <td>@account.AvailableBalance.ToString("C")</td>
                    @{
                        var accountStatus = (AccountStatus)account.Status;
                        var accountStatusName = EnumHelper.GetDescription(accountStatus);
                        
                        
   
                    }
                    <td>@accountStatusName</td>
                    <td>
                        <a href="@Url.Action("GetAccountById", "Account", new { id = account.AccountId })" class="btn btn-info">Details</a>
                        <a href="@Url.Action("Withdraw", "Transactions", new { id = account.AccountId })" class="btn btn-warning">Withdraw</a>
                        <a href="@Url.Action("LoanRepayment", "Transactions", new { id = account.AccountId })" class="btn btn-danger">Make Payment</a>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No accounts found for this customer.</p>
}
<div class="d-flex justify-content-between align-items-center mb-2">
    <span>Page @Model.PageNumber of @Model.PageCount</span>
</div>

@Html.PagedListPager(
    Model,
    page => Url.Action("Index", new { 
        page, 
        status = Context.Request.Query["status"].ToString() 
    }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5
    }
)