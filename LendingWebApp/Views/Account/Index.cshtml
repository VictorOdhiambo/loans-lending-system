@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<LoanApplicationService.Service.DTOs.Account.AccountDto>

@{
        ViewData["Title"] = "Account Overview";

}

<h2 class="mb-4">Accounts Overview</h2>

<div class="table-responsive">
    <table class=" table table-striped table-hover ">
        <thead>
            <tr>
                <th>AccountNumber</th>
                <th>AccountType</th>
                <th>PrincipalAmount</th>
                <th>OutstandingBalance</th>
                <th>DisbursementDate</th>
                <th>NextPaymentDate</th>
                <th>MonthlyPayment</th>
                <th>InterestRate</th>
                <th>MaturityDate</th>
                <th class="text-end">Actions</th>
            </tr>
        </thead>

       <tbody>
           @foreach (var item in Model)
           {
               <tr >
                   <td>@item.AccountNumber</td>
                   <td>@item.AccountType</td>
                   <td>@item.PrincipalAmount</td>
                   <td>@item.OutstandingBalance</td>
                    <td>@(item.DisbursementDate.HasValue ? item.DisbursementDate.Value.ToString("dd/MM/yyyy") : "")</td>                   <td>@item.NextPaymentDate.ToString("dd/MM/yyyy")</td>
                   <td>@item.MonthlyPayment</td>
                   <td>@item.InterestRate</td>
                   <td>@(item.DisbursementDate.HasValue ? item.DisbursementDate.Value.ToString("dd/MM/yyyy") : "" ) </td>
                    <td class="text-end">
                        <a href="@Url.Action("GetAccountById", "Account", new { id = item.AccountId })" class="btn btn-info">Details</a>

                    </td> 
                   </tr>
                   }
       </tbody>

    </table>
</div>

                   <div class="d-flex justify-content-between align-items-center mb-2">
    <span>Page @Model.PageNumber of @Model.PageCount</span>
</div>

@Html.PagedListPager(
    Model,
    page => Url.Action("Index", new { 
        page, 
        status = Context.Request.Query["status"].ToString() 
    }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5
    }
)
