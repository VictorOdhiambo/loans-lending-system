@model IEnumerable<LoanApplicationService.Service.DTOs.Transactions.TransactionDto>
@using LoanApplicationService.CrossCutting.Utils;

@{
    Layout = User.IsInRole("Customer") ? "~/Views/Customer/Shared/_CustomerLayout.cshtml" : "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Transaction History";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i>
        <strong>Success!</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Transactions for Account @ViewBag.AccountNumber</h2>
    @if (User.IsInRole("Customer"))
    {
        <a href="/Account/GetAccountsByUserId" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left me-2"></i>Back to My Accounts
        </a>
    }
    else
    {
        <a href="/Account/GetAccountById/@ViewBag.AccountId" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left me-2"></i>Back to Account Details
        </a>
    }
</div>
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.AccountId)</th>
                <th>@Html.DisplayNameFor(model => model.TransactionId)</th>
                <th>@Html.DisplayNameFor(model => model.TransactionType)</th>
                <th>@Html.DisplayNameFor(model => model.Amount)</th>
                <th>@Html.DisplayNameFor(model => model.TransactionDate)</th>
                <th>@Html.DisplayNameFor(model => model.PrincipalAmount)</th>
                <th>@Html.DisplayNameFor(model => model.InterestAmount)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in Model)
            {
                <tr>
                    <td>@transaction.AccountId</td>
                    <td>@transaction.TransactionId</td>
                    @{
                        var transactionType = (TransactionType)transaction.TransactionType;
                        var transactionTypeName = EnumHelper.GetDescription(transactionType);
           
                    }
                    <td>@transactionTypeName</td>
                    <td>@transaction.Amount.ToString("C")</td>
                    <td>@transaction.TransactionDate.ToString("g")</td>
                  
                    @if (transaction.TransactionType == (int)TransactionType.Payment)
                    {
                        <td>@(transaction.PrincipalAmount != null ? transaction.PrincipalAmount.ToString("C") : "-")</td>
                        <td>@(transaction.InterestAmount != null ? transaction.InterestAmount.ToString("C") : "-")</td>
                    }
                    else
                    {
                        <td>-</td>
                        <td>-</td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        // Auto-hide success message after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const successMessage = document.getElementById('successMessage');
            if (successMessage) {
                setTimeout(function() {
                    const alert = new bootstrap.Alert(successMessage);
                    alert.close();
                }, 5000);
            }
        });
    </script>
}
